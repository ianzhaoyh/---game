{"ast":null,"code":"var _jsxFileName = \"/Users/ianzhao/Desktop/\\u524D\\u7AEF/project/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 11\n  }, this);\n}\n_c = Square;\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay\n}) {\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = \"Winner:\" + winner;\n  } else {\n    status = \"Next player:\" + (xIsNext ? \"X\" : \"O\");\n  }\n  function handleClick(i) {\n    if (squares[i] || calculateWinner(squares)) return;\n    const nextSquares = squares.slice(); //创建squares数组的副本\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    onPlay(nextSquares);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[0],\n        onSquareClick: () => handleClick(0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[1],\n        onSquareClick: () => handleClick(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[2],\n        onSquareClick: () => handleClick(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[3],\n        onSquareClick: () => handleClick(3)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[4],\n        onSquareClick: () => handleClick(4)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[5],\n        onSquareClick: () => handleClick(5)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[6],\n        onSquareClick: () => handleClick(6)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[7],\n        onSquareClick: () => handleClick(7)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[8],\n        onSquareClick: () => handleClick(8)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c2 = Board;\nexport default function Game() {\n  _s();\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares]; /*...history 会将 history 数组中的所有元素（每一步棋盘的状态）展开，并复制到新的数组中。\n                                                                             •\tnextSquares 是当前最新的棋盘状态。它作为一个新的元素，添加到展开的 history 数组之后   React 中管理状态时，我们通常需要保持状态的不可变性，即不要直接修改已有的状态，而是创建并返回一个新的状态对象或数组*/\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = \"Go to move #\" + move;\n    } else {\n      description = \"Go to game start\";\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this); /*key 是 React 中一个特殊的保留属性。创建元素时，React 提取 key 属性并将 key 直接存储在返回的元素上。尽管 key 看起来像是作为 props 传递的，但 React 会自动使用 key 来决定要更新哪些组件。组件无法询问其父组件指定的 key。\n              强烈建议你在构建动态列表时分配适当的 key。如果你没有合适的 key，你可能需要考虑重组你的数据，以便你这样做。\n                如果没有指定 key，React 会报错，默认使用数组索引作为 key。在尝试重新排序列表项或插入/删除列表项时，使用数组索引作为 key 是有问题的。显式传递 key={i} 可以消除错误，但与数组索引有相同的问题，在大多数情况下不推荐使用。*/\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"l7yzDNv30kYAzidDnY7t+vIiNKA=\");\n_c3 = Game;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2],\n  //第一行\n  [3, 4, 5],\n  //第二行\n  [6, 7, 8],\n  //第三行\n  [0, 3, 6],\n  //第一列\n  [1, 4, 7],\n  //第二列\n  [2, 5, 8],\n  //第三列\n  [0, 4, 8],\n  //对角线\n  [2, 4, 6] //对角线\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","onSquareClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","xIsNext","squares","onPlay","winner","calculateWinner","status","handleClick","i","nextSquares","slice","_c2","Game","_s","history","setHistory","Array","fill","currentMove","setCurrentMove","currentSquares","handlePlay","nextHistory","length","jumpTo","nextMove","moves","map","move","description","_c3","lines","a","b","c","$RefreshReg$"],"sources":["/Users/ianzhao/Desktop/前端/project/src/App.js"],"sourcesContent":["import { useState } from 'react';\n\nfunction Square({ value, onSquareClick }) {\n\n  return (<button className=\"square\" onClick={onSquareClick}>\n    {value}\n  </button>);\n}\n\n function Board({xIsNext,squares,onPlay}) {\n  const winner=calculateWinner(squares);\n  let status;\n  if(winner){\n    status=\"Winner:\"+winner;\n  }else{\n    status=\"Next player:\"+(xIsNext?\"X\":\"O\");\n  }\n  function handleClick(i) {\n    if (squares[i]||calculateWinner(squares)) return;\n    const nextSquares = squares.slice(); //创建squares数组的副本\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    }\n    else { nextSquares[i] = \"O\"; }\n    onPlay(nextSquares);\n  }\n  return (\n    <>\n      <div className=\"status\">{status}</div>\n      <div className=\"board-row\">\n        <Square value={squares[0]} onSquareClick={() => handleClick(0)} />\n        <Square value={squares[1]} onSquareClick={() => handleClick(1)} />\n        <Square value={squares[2]} onSquareClick={() => handleClick(2)} />\n      </div>\n      <div className=\"board-row\">\n        <Square value={squares[3]} onSquareClick={() => handleClick(3)} />\n        <Square value={squares[4]} onSquareClick={() => handleClick(4)} />\n        <Square value={squares[5]} onSquareClick={() => handleClick(5)} />\n      </div>\n      <div className=\"board-row\">\n        <Square value={squares[6]} onSquareClick={() => handleClick(6)} />\n        <Square value={squares[7]} onSquareClick={() => handleClick(7)} />\n        <Square value={squares[8]} onSquareClick={() => handleClick(8)} />\n      </div>\n\n    </>\n\n  );\n\n}\nexport default function Game(){\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const[currentMove,setCurrentMove]=useState(0);\n  const xIsNext=currentMove%2===0;\n  const currentSquares=history[currentMove];\n\n  function handlePlay(nextSquares){\n    const nextHistory=[...history.slice(0,currentMove+1),nextSquares]; /*...history 会将 history 数组中的所有元素（每一步棋盘的状态）展开，并复制到新的数组中。\n    •\tnextSquares 是当前最新的棋盘状态。它作为一个新的元素，添加到展开的 history 数组之后   React 中管理状态时，我们通常需要保持状态的不可变性，即不要直接修改已有的状态，而是创建并返回一个新的状态对象或数组*/\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length-1);\n  }\n  function jumpTo(nextMove){\n    setCurrentMove(nextMove);\n  }\n  const moves=history.map((squares,move)=>{\n    let description;\n    if(move>0){\n      description=\"Go to move #\"+move;\n    }else{\n      description=\"Go to game start\";\n    }\n    return(\n      <li key={move}>\n        <button onClick={()=>jumpTo(move)}>{description}</button>\n      </li>\n    ); /*key 是 React 中一个特殊的保留属性。创建元素时，React 提取 key 属性并将 key 直接存储在返回的元素上。尽管 key 看起来像是作为 props 传递的，但 React 会自动使用 key 来决定要更新哪些组件。组件无法询问其父组件指定的 key。\n  \n    强烈建议你在构建动态列表时分配适当的 key。如果你没有合适的 key，你可能需要考虑重组你的数据，以便你这样做。\n    \n    如果没有指定 key，React 会报错，默认使用数组索引作为 key。在尝试重新排序列表项或插入/删除列表项时，使用数组索引作为 key 是有问题的。显式传递 key={i} 可以消除错误，但与数组索引有相同的问题，在大多数情况下不推荐使用。*/\n    \n    \n  });\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} />\n      </div>\n      <div className=\"game-info\">\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  );\n}\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2], //第一行\n    [3, 4, 5], //第二行\n    [6, 7, 8], //第三行\n    [0, 3, 6], //第一列\n    [1, 4, 7], //第二列\n    [2, 5, 8],//第三列\n    [0, 4, 8], //对角线\n    [2, 4, 6] //对角线\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i]\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}